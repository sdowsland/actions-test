name: Build docker image
on: 
  push:
    branches:
    - '*'
jobs:
  detect_env:
    name: Detect Environment
    runs-on: ubuntu-latest
    outputs: 
      sonarqube_token: ${{ steps.set_token.outputs.sonarqube_token }}
    steps:
      - name: ref
        run: echo ${{github.ref }}
      # This step is run when the tag is staging
      - name: Sets env token for staging
        id: set_token
        run: |
            # Strip git ref prefix from branch
            BRANCH=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

            echo "$BRANCH"
          
            [ "$BRANCH" == "master" ] && STAGE_TOKEN=SONAR_TOKEN

            [ "$BRANCH" == "staging" ] && STAGE_TOKEN=SONAR_TOKEN_STAGING
            
            echo $STAGE_TOKEN
            
            echo ::set-output name=sonarqube_token::$STAGE_TOKEN
            
  build:
    name: Build
    needs: detect_env
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{needs.detect_env.outputs.sonarqube_token}}

#   user_check:
#     runs-on: ubuntu-18.04
#     container: jonnylaw/nicdblog:latest
#     steps:
#       - name: pwd
#         run: pwd
#       - name: ls
#         run: ls -a
#       - name: who
#         run: whoami
#       - name: copy renv
#         run: cp -r /usr/local/app/renv .
#       - name: copy rprof
#         run: cp /usr/local/app/.Rprofile .
#       - name: ls renv
#         run: ls -lah renv/library/R-4.0/x86_64-pc-linux-gnu/
#       - name: installed_packages
#         run: Rscript -e "installed.packages()"
#       - name: import_blogdown 
#         run: Rscript -e "library(blogdown)"
    

# jobs:
#   base-image:
#     runs-on: ubuntu-18.04
#     steps:
#       - name: Get file changes
#         id: file_changes
#         uses: trilom/file-changes-action@v1.2.3
#         with:
#           output: ','
#           fileOutput: ','
#       - name: changed_yml
#         id: changed_yml
#         run: |
#           if grep renv.lock $HOME/files_modified.csv; then
#             MODIFIED=$(grep renv.lock $HOME/files_modified.csv)
#           else
#             MODIFIED="nope"
#           fi
          
#           echo ::set-output name=RENV_MODIFIED::$MODIFIED
#       - name: Testyml
#         run: echo ${{steps.changed_yml.outputs.RENV_MODIFIED}}
#       - name: TestId
#         if: contains(steps.changed_yml.outputs.RENV_MODIFIED, 'renv.lock')
#         run: echo "yeysyeysyeys"
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@master
# #     - name: Run Docker build
# #       id: get_version
# #       run: docker build -f test-docker/Dockerfile ./test-docker
#     - name: Test echo
#       id: test_echo
#       run: echo "Hello"
#     - name: Test echo of secret into file
#       run: |
#         echo "texts"
#       env:
#         FINGERPRINT: ${{secrets.RANDOM_KEY}} 
#     - name: demo
#       id: demo_it
#       run: REPO=$( echo "${{ github.repository }}" | echo $(awk '{print tolower($0)}') )
#     - name: Test bash to lower
#       id: test_bash
#       run: echo "${REPO,,}"; 
